<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="service_8cpp" kind="file" language="C++">
    <compoundname>service.cpp</compoundname>
    <includes local="yes">ros/ros.h</includes>
    <includes local="yes">std_srvs/Empty.h</includes>
    <includes local="yes">assignment/Service.h</includes>
    <includes local="yes">sensor_msgs/LaserScan.h</includes>
    <includes local="yes">geometry_msgs/Twist.h</includes>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">string.h</includes>
    <includes local="yes">move_base_msgs/MoveBaseActionGoal.h</includes>
    <includes local="yes">geometry_msgs/PointStamped.h</includes>
    <includes local="yes">move_base_msgs/MoveBaseActionFeedback.h</includes>
    <incdepgraph>
      <node id="10">
        <label>geometry_msgs/PointStamped.h</label>
      </node>
      <node id="3">
        <label>std_srvs/Empty.h</label>
      </node>
      <node id="9">
        <label>move_base_msgs/MoveBaseActionGoal.h</label>
      </node>
      <node id="11">
        <label>move_base_msgs/MoveBaseActionFeedback.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="4">
        <label>assignment/Service.h</label>
      </node>
      <node id="5">
        <label>sensor_msgs/LaserScan.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>src/service.cpp</label>
        <link refid="service_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="service_8cpp_1a70ed59adcb4159ac551058053e649640" prot="public" static="no">
        <name>SIZE</name>
        <initializer>144</initializer>
        <briefdescription>
<para>Size of the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="47" column="9" bodyfile="src/service.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="service_8cpp_1a13d252428836cb17e8183d427299d370" prot="public" static="no">
        <name>th</name>
        <initializer>0.5</initializer>
        <briefdescription>
<para>Distance threashold for obstacle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="50" column="9" bodyfile="src/service.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="service_8cpp_1ae62a5b19571be315331b379784dc04ba" prot="public" static="no">
        <name>wth</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Distance from the wall. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="53" column="9" bodyfile="src/service.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool assistDrive</definition>
        <argsstring></argsstring>
        <name>assistDrive</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Global variable to manage the drive assistance activation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="56" column="6" bodyfile="src/service.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1ac3039562ceac7fca79eec81d1561b228" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool manual</definition>
        <argsstring></argsstring>
        <name>manual</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Global variable to manage the manual drive activation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="58" column="6" bodyfile="src/service.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool G</definition>
        <argsstring></argsstring>
        <name>G</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Global variable to determine the presence of a goal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="60" column="6" bodyfile="src/service.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1a350594df3e8f6948c8462edfd41ce086" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pub</definition>
        <argsstring></argsstring>
        <name>pub</name>
        <briefdescription>
<para>Defining a publisher for the goal publication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="64" column="16" bodyfile="src/service.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1af16f3cb6a089096b01458711b8a6eebb" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pubCancel</definition>
        <argsstring></argsstring>
        <name>pubCancel</name>
        <briefdescription>
<para>Defining a publisher for the goal deletion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="66" column="16" bodyfile="src/service.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher pubV</definition>
        <argsstring></argsstring>
        <name>pubV</name>
        <briefdescription>
<para>Defining a publisher for the velocity publication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="68" column="16" bodyfile="src/service.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" prot="public" static="no" mutable="no">
        <type>move_base_msgs::MoveBaseActionGoal</type>
        <definition>move_base_msgs::MoveBaseActionGoal pose</definition>
        <argsstring></argsstring>
        <name>pose</name>
        <briefdescription>
<para>Global variable to store the position of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="71" column="36" bodyfile="src/service.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1a36975d8f325eddfc16c5c17bd6116efd" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string goalID</definition>
        <argsstring></argsstring>
        <name>goalID</name>
        <briefdescription>
<para>Global variable to store the goal ID of the robot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="74" column="13" bodyfile="src/service.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1a1c985d62869c1ba5fb80c7f01dff1f0b" prot="public" static="no" mutable="no">
        <type>actionlib_msgs::GoalID</type>
        <definition>actionlib_msgs::GoalID goalToCancel</definition>
        <argsstring></argsstring>
        <name>goalToCancel</name>
        <briefdescription>
<para>Global variaible to store the ID of the goal that has to be deleted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="77" column="24" bodyfile="src/service.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" prot="public" static="no" mutable="no">
        <type>geometry_msgs::Twist</type>
        <definition>geometry_msgs::Twist n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>Global variable as message to pass data with a proper format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="80" column="22" bodyfile="src/service.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1add752d850860e74bb9d4b65aa31f1140" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float xG</definition>
        <argsstring></argsstring>
        <name>xG</name>
        <briefdescription>
<para>Global variable to store the x-coordinate of the position inserted by the user. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="83" column="7" bodyfile="src/service.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="service_8cpp_1a93b1a89dbf18ea027073e19a2a0adbbe" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float yG</definition>
        <argsstring></argsstring>
        <name>yG</name>
        <briefdescription>
<para>Global variable to store the y-coordinate of the position inserted by the user. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="84" column="7" bodyfile="src/service.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="service_8cpp_1a890521a70172978804cdaf281c4b5058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setPoseParams</definition>
        <argsstring>(float inX, float inY)</argsstring>
        <name>setPoseParams</name>
        <param>
          <type>float</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inY</declname>
        </param>
        <briefdescription>
<para>Function to set the goal of the robot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>X and Y coordinates for the goal.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function takes as input the x and y value inserted by the user and set them as the target goal that the robot has to reach. It enters into the field ...position.x/y to set them, then sets the frame_id as map and the value of the quaternion module to 1 (all to 0 except w to 1). After having completed all these actions it publish the goal and set the variable G (the one to establish the presence of a goal) to true so that the robot can know there is a goal to be reached. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="101" column="6" bodyfile="src/service.cpp" bodystart="101" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cancelGoal</definition>
        <argsstring>()</argsstring>
        <name>cancelGoal</name>
        <briefdescription>
<para>Function to delete the actual goal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="133" column="6" bodyfile="src/service.cpp" bodystart="133" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a60a61cb42ee062b6782bcc39a63aa3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void takeStatus</definition>
        <argsstring>(const move_base_msgs::MoveBaseActionFeedback::ConstPtr &amp;msg)</argsstring>
        <name>takeStatus</name>
        <param>
          <type>const move_base_msgs::MoveBaseActionFeedback::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Function to take the status: goal ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>message from which infos regarding the robot&apos;s position are taken</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function is set to keep periodically updated the current goal set: in particular the goal is periodically taken into a proper variable. Moreover, if there is a goal already set, checked through the variable G, and if the robot is sufficiently near the position speficied by the user input (x and y coordinates) then the goal is automatically deleted to avoid having it set even if the robot is not moving, thus saving memory space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="170" column="6" bodyfile="src/service.cpp" bodystart="170" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a7b3a86d9513c00df95a3019351e00061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void currGoal</definition>
        <argsstring>(const move_base_msgs::MoveBaseActionGoal::ConstPtr &amp;m)</argsstring>
        <name>currGoal</name>
        <param>
          <type>const move_base_msgs::MoveBaseActionGoal::ConstPtr &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Function to store the current goal the robot has to rach. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>message from which infos regarding the robot&apos;s position are taken</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function is used to take the robot goal in order to make it available to the program to perform particular actions: for example the check of the distance to allow the program delete it, or also to state that a particular position (x,y) inserted is not reachable by the robot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="204" column="6" bodyfile="src/service.cpp" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a2c38b7bf238ee6a4bd51cfe140c3d87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void takeVel</definition>
        <argsstring>(const geometry_msgs::Twist::ConstPtr &amp;m)</argsstring>
        <name>takeVel</name>
        <param>
          <type>const geometry_msgs::Twist::ConstPtr &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Function to take the current velocity of the robot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>message from which infos regarding the robot are taken</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function is used to read the robot&apos;s velocity. In particular the function checks if the manual modality of driving is enabled, throigh the manual global velocity; after that it also checks the presence of the driving assistance through a proper variable; at the end it stores the actual velocity of the robot into two different variables in order to have them available. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="227" column="6" bodyfile="src/service.cpp" bodystart="227" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a2a0e843767aeea4f433a28b9c54f573a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void menu</definition>
        <argsstring>()</argsstring>
        <name>menu</name>
        <briefdescription>
<para>Function to display infos about how to enter a valid position for the goal the robot has to reach. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="261" column="6" bodyfile="src/service.cpp" bodystart="261" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double min_val</definition>
        <argsstring>(double a[])</argsstring>
        <name>min_val</name>
        <param>
          <type>double</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Function to compute the minimul valie among an array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a[]</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of double that contains values representing the distances</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>min_val the minimum value that is contained inside the array</para>
</simplesect>
The functon is used to compute the minimum value among an array with a certain dimension. In particular, each array element represents the distance from an obstacle that is detected by the laser scan. The robot is provided with 720 sensors, so the array will have that dimension (SIZE in the function); the maximum distance that the robot can detect is 30 and this is the value that is set as the minimim inside the dist variable of the function. For each element inside of the array the function compares it with the dist variable and if it is lower that this one then it is updated with the new minimum value. At the end of the execution the function returns the minimum value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="287" column="8" bodyfile="src/service.cpp" bodystart="287" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a74eeefdaefa8e5ec4b48c6209aaeb02f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manuallyDrive</definition>
        <argsstring>(char input)</argsstring>
        <name>manuallyDrive</name>
        <param>
          <type>char</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function to enable/disable or quit the manual drive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>char that represents the command the user has inserted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function is used to enable, disable or quit the manual drive for the robot. In particular there is a switch that takes as parameter a character inserted by the user. First of all the global variable manual is set to true to allow the user drive the robot with the keyboard; then depending on the value read it is changed the value of the global variable assistDrive (true when enabled, false when disabled) in order to allow the program having or not the assistance during the drive. At the end, when the user inserts the quit command (q) the function sets to false all the two global variables, sets also to 0 the linear and angular velocity of the robot and publishes them to stop the robot moving. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="326" column="6" bodyfile="src/service.cpp" bodystart="326" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1ad92a1ab439081fef6e6c319e774e907f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void driveAssist</definition>
        <argsstring>(const sensor_msgs::LaserScan::ConstPtr &amp;m)</argsstring>
        <name>driveAssist</name>
        <param>
          <type>const sensor_msgs::LaserScan::ConstPtr &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Function to assit the robot while driving. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>message containing all the distances of the obstacles detected by the robot&apos;s sensors</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
The function is used to assist the robot while it is driving. In particular the function checks that the assist drive modality in enabled (if not it quits) then stores the distances value into an array with a proper dimension; then it divides this array into 5 sub arrays (with dimension 144) in order to have different intervals to check. Once that all the data are ready for the program, at each iteration the function checks that the distance of the minimum value of the array is greater than a threshold (choosen by the programmer and defined as a DEFINE at the beginning of the program); if the threshold is greater then the program follows the normal flow, otherwise the function sets the linear and angular velocity to zero and publish them to stop the robot thus avoiding a collision Of course this step are computed for each sub array defined: the threshold may vary if choosen differently. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="370" column="6" bodyfile="src/service.cpp" bodystart="370" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a8cdd6d065ca78e45cb762ecfcb2935e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool setDriveMod</definition>
        <argsstring>(assignment::Service::Request &amp;req, assignment::Service::Response &amp;res)</argsstring>
        <name>setDriveMod</name>
        <param>
          <type>assignment::Service::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>assignment::Service::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Function to set the drive modality according to the user input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>respectively the request and response of the service</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean true or false</para>
</simplesect>
The function is used to set the drive modality according to the user input. Once the user enters an input inside the UI this is passed to the service node by a service: the request is used inside the switch case to set the modality. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="512" column="6" bodyfile="src/service.cpp" bodystart="512" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="service_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/service.cpp" line="585" column="5" bodyfile="src/service.cpp" bodystart="585" bodyend="622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node to manage the correct drive mode according to the user choice. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Matteo Maragliano </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>27/02/2022</para>
</simplesect>
Subscriber to: <linebreak/>
 /move_base/feedback This is the topic to have always the status of the robot available for the use.</para>
<para>/move_base/goal This topic allows the program have always the goal status available to perform the right flow of the program.</para>
<para>/cmd_vel This topic allows the program have always the robot&apos;s velocity available.</para>
<para>/scan This topic is used to take the laser scan values and compute the distance of the robot from an obstacle.</para>
<para>Publisher to: <linebreak/>
 /move_base/goal Topic used to publish the current goal inserted by the user.</para>
<para>/move_base/cancel Topic to delete the current goal used by the robot.</para>
<para>/cmd_vel Topic to publish the velocity the robot has to perform: used to stop the robot when deleting the goal or when there is an obstacle.</para>
<para>Services: <linebreak/>
 /service This is the service used to take from the UI node the user choice inserted.</para>
<para>Description: This node is the service node which allows the program compute the different choices inserted by the user. In particular the UI node sends the user choice through a service and the service node analizes the choice computing the different actions. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#include<sp/>&quot;ros/ros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;std_srvs/Empty.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;assignment/Service.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sensor_msgs/LaserScan.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry_msgs/Twist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;move_base_msgs/MoveBaseActionGoal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry_msgs/PointStamped.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;move_base_msgs/MoveBaseActionFeedback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>size<sp/>for<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZE<sp/>144<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>for<sp/>the<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>th<sp/>0.5<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>for<sp/>the<sp/>distance<sp/>of<sp/>the<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wth<sp/>1<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>variable<sp/>to<sp/>determine<sp/>the<sp/>assistance<sp/>during<sp/>drive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//variable<sp/>to<sp/>allow<sp/>the<sp/>manual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1ac3039562ceac7fca79eec81d1561b228" kindref="member">manual</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>variable<sp/>to<sp/>know<sp/>if<sp/>there<sp/>is<sp/>a<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" kindref="member">G</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>publishers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pub<sp/>for<sp/>the<sp/>goal<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">ros::Publisher<sp/><ref refid="service_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref>;<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pub<sp/>to<sp/>cancel<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">ros::Publisher<sp/><ref refid="service_8cpp_1af16f3cb6a089096b01458711b8a6eebb" kindref="member">pubCancel</ref>;<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pub<sp/>to<sp/>publishthe<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">ros::Publisher<sp/><ref refid="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" kindref="member">pubV</ref>;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>a<sp/>variable<sp/>to<sp/>publish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">move_base_msgs::MoveBaseActionGoal<sp/><ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>a<sp/>string<sp/>to<sp/>save<sp/>the<sp/>goal<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">std::string<sp/><ref refid="service_8cpp_1a36975d8f325eddfc16c5c17bd6116efd" kindref="member">goalID</ref>;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>a<sp/>variable<sp/>for<sp/>reading<sp/>fields<sp/>of<sp/>the<sp/>goal<sp/>to<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">actionlib_msgs::GoalID<sp/><ref refid="service_8cpp_1a1c985d62869c1ba5fb80c7f01dff1f0b" kindref="member">goalToCancel</ref>;<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>a<sp/>variable<sp/>to<sp/>publish<sp/>the<sp/>new<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">geometry_msgs::Twist<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>variables<sp/>to<sp/>store<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1add752d850860e74bb9d4b65aa31f1140" kindref="member">xG</ref>;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a93b1a89dbf18ea027073e19a2a0adbbe" kindref="member">yG</ref>;<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">//<sp/>function<sp/>to<sp/>set<sp/>the<sp/>parameters<sp/>to<sp/>the<sp/>right<sp/>field<sp/>of<sp/>the<sp/>variable<sp/>to<sp/>publish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a890521a70172978804cdaf281c4b5058" kindref="member">setPoseParams</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inY)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>value<sp/>(x<sp/>y)<sp/>to<sp/>the<sp/>x<sp/>and<sp/>y<sp/>field<sp/>of<sp/>the<sp/>variable<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>.goal.target_pose.pose.position.x<sp/>=<sp/>inX;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>.goal.target_pose.pose.position.y<sp/>=<sp/>inY;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>frame_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>.goal.target_pose.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>quaternion<sp/>module<sp/>equal<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>.goal.target_pose.pose.orientation.w<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>the<sp/>target<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref>.publish(<ref refid="service_8cpp_1a3d019b1517126a1fe3e5c258ffdf23b6" kindref="member">pose</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>goal<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" kindref="member">G</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">//<sp/>function<sp/>to<sp/>cancel<sp/>the<sp/>goal<sp/>by<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>presence<sp/>of<sp/>a<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" kindref="member">G</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>goal<sp/>id<sp/>to<sp/>cancel<sp/>equat<sp/>to<sp/>the<sp/>actual<sp/>goalID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a1c985d62869c1ba5fb80c7f01dff1f0b" kindref="member">goalToCancel</ref>.id<sp/>=<sp/><ref refid="service_8cpp_1a36975d8f325eddfc16c5c17bd6116efd" kindref="member">goalID</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>to<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1af16f3cb6a089096b01458711b8a6eebb" kindref="member">pubCancel</ref>.publish(<ref refid="service_8cpp_1a1c985d62869c1ba5fb80c7f01dff1f0b" kindref="member">goalToCancel</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>flag<sp/>to<sp/>flase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" kindref="member">G</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Goal<sp/>cancelled.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>goal<sp/>set.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">//<sp/>function<sp/>to<sp/>take<sp/>the<sp/>status:<sp/>in<sp/>particular<sp/>the<sp/>actual<sp/>goal<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a60a61cb42ee062b6782bcc39a63aa3bf" kindref="member">takeStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>move_base_msgs::MoveBaseActionFeedback::ConstPtr&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>goalID<sp/>variable<sp/>with<sp/>the<sp/>value<sp/>of<sp/>the<sp/>actual<sp/>goal<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a36975d8f325eddfc16c5c17bd6116efd" kindref="member">goalID</ref><sp/>=<sp/>msg<sp/>-&gt;<sp/>status.goal_id.id;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>presence<sp/>of<sp/>a<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1adc50817b9a5196dce387a27280cf2c2c" kindref="member">G</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>distance<sp/>of<sp/>both<sp/>coordinates<sp/>to<sp/>see<sp/>if<sp/>the<sp/>robot<sp/>is<sp/>near<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(msg<sp/>-&gt;<sp/>feedback.base_position.pose.position.x<sp/>-<sp/><ref refid="service_8cpp_1add752d850860e74bb9d4b65aa31f1140" kindref="member">xG</ref>)<sp/>&lt;=<sp/><ref refid="service_8cpp_1a13d252428836cb17e8183d427299d370" kindref="member">th</ref><sp/>&amp;&amp;<sp/>abs(msg<sp/>-&gt;<sp/>feedback.base_position.pose.position.y<sp/>-<sp/><ref refid="service_8cpp_1a93b1a89dbf18ea027073e19a2a0adbbe" kindref="member">yG</ref>)<sp/>&lt;=<sp/><ref refid="service_8cpp_1a13d252428836cb17e8183d427299d370" kindref="member">th</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cancel<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Goal<sp/>reached<sp/>successfully\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">//<sp/>function<sp/>to<sp/>store<sp/>the<sp/>current<sp/>goal<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a7b3a86d9513c00df95a3019351e00061" kindref="member">currGoal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>move_base_msgs::MoveBaseActionGoal::ConstPtr&amp;<sp/>m)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>current<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1add752d850860e74bb9d4b65aa31f1140" kindref="member">xG</ref><sp/>=<sp/>m<sp/>-&gt;<sp/>goal.target_pose.pose.position.x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>current<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a93b1a89dbf18ea027073e19a2a0adbbe" kindref="member">yG</ref><sp/>=<sp/>m<sp/>-&gt;<sp/>goal.target_pose.pose.position.y;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="comment">//<sp/>function<sp/>to<sp/>take<sp/>the<sp/>velocity:<sp/>always<sp/>available<sp/>the<sp/>current<sp/>vel<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a2c38b7bf238ee6a4bd51cfe140c3d87f" kindref="member">takeVel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::Twist::ConstPtr&amp;<sp/>m)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>presence<sp/>of<sp/>the<sp/>manual<sp/>drive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="service_8cpp_1ac3039562ceac7fca79eec81d1561b228" kindref="member">manual</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>presence<sp/>of<sp/>the<sp/>driving<sp/>assistance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" kindref="member">pubV</ref>.publish(m);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>velocity<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>=<sp/>m<sp/>-&gt;<sp/>linear.x;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>=<sp/>m<sp/>-&gt;<sp/>angular.z;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">//<sp/>menu<sp/>to<sp/>display<sp/>inside<sp/>the<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a2a0e843767aeea4f433a28b9c54f573a" kindref="member">menu</ref>()</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n######################<sp/>INFOS<sp/>######################\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Enter<sp/>a<sp/>position<sp/>with<sp/>the<sp/>&apos;x<sp/>y&apos;<sp/>format.\nUse<sp/>a<sp/>space<sp/>for<sp/>distinguishing<sp/>the<sp/>coordinates.\nUse<sp/>a<sp/>dot<sp/>.<sp/>for<sp/>decimal<sp/>coordinates.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nCartesian<sp/>axes<sp/>are<sp/>set<sp/>positive<sp/>as<sp/>follow:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t^\n\t|\n\t|\n\t|\n\t|\n\t°----------&gt;\nO<sp/>=<sp/>(0<sp/>0)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;###################################################\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nType<sp/>here:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">//<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>minimum<sp/>distance<sp/>among<sp/>array<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a[])</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>dist<sp/>as<sp/>the<sp/>maximum<sp/>for<sp/>the<sp/>laser<sp/>so<sp/>that<sp/>there<sp/>cannot<sp/>be<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>each<sp/>element<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>value<sp/>is<sp/>less<sp/>than<sp/>the<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a[i]<sp/>&lt;<sp/>dist)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>tge<sp/>distance<sp/>with<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>a[i];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>distance<sp/>found<sp/>as<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">//<sp/>manual<sp/>drive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a74eeefdaefa8e5ec4b48c6209aaeb02f" kindref="member">manuallyDrive</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>input)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ac3039562ceac7fca79eec81d1561b228" kindref="member">manual</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(input)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ac3039562ceac7fca79eec81d1561b228" kindref="member">manual</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" kindref="member">pubV</ref>.publish(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="comment">//<sp/>function<sp/>to<sp/>assist<sp/>the<sp/>robot<sp/>driving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1ad92a1ab439081fef6e6c319e774e907f" kindref="member">driveAssist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::LaserScan::ConstPtr<sp/>&amp;m)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>manual<sp/>drive<sp/>is<sp/>on<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1a1e08fee95303ef1c51d7369649b0fb1c" kindref="member">assistDrive</ref>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>declare<sp/>an<sp/>array<sp/>of<sp/>dimension<sp/>of<sp/>the<sp/>ranges<sp/>(720)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r[m-&gt;ranges.size()];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>new<sp/>array<sp/>to<sp/>make<sp/>the<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m-&gt;ranges.size();<sp/>i++)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>m-&gt;ranges[i];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>all<sp/>the<sp/>value<sp/>for<sp/>the<sp/>sector<sp/>so<sp/>divid<sp/>them<sp/>into<sp/>144<sp/>array<sp/>(720/5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>right[<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front<sp/>rigth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fr_right[<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>front[<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fr_left[<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>left[<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right[i]<sp/>=<sp/>r[i];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>front<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr_right[i]<sp/>=<sp/>r[i+<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>front[i]<sp/>=<sp/>r[i+2*<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>front<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr_left[i]<sp/>=<sp/>r[i+3*<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left[i]<sp/>=<sp/>r[i+4*<ref refid="service_8cpp_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>there<sp/>is<sp/>an<sp/>obstacle<sp/>in<sp/>the<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(front)<sp/>&lt;<sp/><ref refid="service_8cpp_1ae62a5b19571be315331b379784dc04ba" kindref="member">wth</ref>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>to<sp/>go<sp/>straight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wall<sp/>in<sp/>the<sp/>front!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>distance<sp/>on<sp/>the<sp/>right<sp/>with<sp/>the<sp/>front<sp/>right<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(fr_right)<sp/>&lt;<sp/><ref refid="service_8cpp_1ae62a5b19571be315331b379784dc04ba" kindref="member">wth</ref>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>to<sp/>turn<sp/>on<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wall<sp/>on<sp/>the<sp/>front<sp/>right!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>distance<sp/>on<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(right)<sp/>&lt;<sp/><ref refid="service_8cpp_1ae62a5b19571be315331b379784dc04ba" kindref="member">wth</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>to<sp/>turn<sp/>on<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wall<sp/>on<sp/>the<sp/>right!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>distance<sp/>on<sp/>the<sp/>left<sp/>with<sp/>the<sp/>front<sp/>left<sp/>arrat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(fr_left)<sp/>&lt;<sp/><ref refid="service_8cpp_1ae62a5b19571be315331b379784dc04ba" kindref="member">wth</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>to<sp/>turn<sp/>on<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wall<sp/>on<sp/>the<sp/>front<sp/>left!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>distance<sp/>on<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ae0dfddff71559c8451ffd82cf1bb34e6" kindref="member">min_val</ref>(left)<sp/>&lt;<sp/><ref refid="service_8cpp_1ae62a5b19571be315331b379784dc04ba" kindref="member">wth</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>robot<sp/>has<sp/>to<sp/>turn<sp/>on<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.angular.z<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wall<sp/>on<sp/>the<sp/>left!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>.linear.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>the<sp/>new<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" kindref="member">pubV</ref>.publish(<ref refid="service_8cpp_1ad8b22358bb104a13cb2016985daa07eb" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">//<sp/>switch<sp/>to<sp/>choose<sp/>what<sp/>to<sp/>do<sp/>given<sp/>a<sp/>certain<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a8cdd6d065ca78e45cb762ecfcb2935e7" kindref="member">setDriveMod</ref><sp/>(assignment::Service::Request<sp/>&amp;req,<sp/>assignment::Service::Response<sp/>&amp;res)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(req.input)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>a<sp/>position<sp/>(x<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>some<sp/>instructions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a2a0e843767aeea4f433a28b9c54f573a" kindref="member">menu</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//defining<sp/>the<sp/>variables<sp/>to<sp/>store<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inX,inY;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>value<sp/>by<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cin<sp/>&gt;&gt;<sp/>inX<sp/>&gt;&gt;<sp/>inY;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>output<sp/>to<sp/>print<sp/>again<sp/>in<sp/>a<sp/>white<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>to<sp/>set<sp/>the<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a890521a70172978804cdaf281c4b5058" kindref="member">setPoseParams</ref>(inX,inY);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drive<sp/>the<sp/>robot<sp/>with<sp/>the<sp/>teleop_twist_kwyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>function<sp/>to<sp/>drive<sp/>the<sp/>robot<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a74eeefdaefa8e5ec4b48c6209aaeb02f" kindref="member">manuallyDrive</ref>(req.input);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>current<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>function<sp/>to<sp/>cancel<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a6911e3fbd406f287be9ab539f0459c0a" kindref="member">cancelGoal</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill<sp/>all<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::shutdown();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>input.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="comment">//<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="service_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialising<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;service&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defining<sp/>a<sp/>node<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>the<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>the<sp/>service<sp/>and<sp/>call<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::ServiceServer<sp/>service<sp/>=<sp/>nh.advertiseService(</highlight><highlight class="stringliteral">&quot;/service&quot;</highlight><highlight class="normal">,<sp/><ref refid="service_8cpp_1a8cdd6d065ca78e45cb762ecfcb2935e7" kindref="member">setDriveMod</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>the<sp/>topic<sp/>move_base/goal<sp/>for<sp/>setting<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1a350594df3e8f6948c8462edfd41ce086" kindref="member">pub</ref><sp/>=<sp/>nh.advertise&lt;move_base_msgs::MoveBaseActionGoal&gt;(</highlight><highlight class="stringliteral">&quot;/move_base/goal&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>the<sp/>topic<sp/>move_base/cancel<sp/>for<sp/>cancelling<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1af16f3cb6a089096b01458711b8a6eebb" kindref="member">pubCancel</ref><sp/>=<sp/>nh.advertise&lt;actionlib_msgs::GoalID&gt;(</highlight><highlight class="stringliteral">&quot;/move_base/cancel&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advertise<sp/>the<sp/>topic<sp/>cmd_vel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="service_8cpp_1acc3d127c97446f878d9550daf52cdb06" kindref="member">pubV</ref><sp/>=<sp/>nh.advertise&lt;geometry_msgs::Twist&gt;(</highlight><highlight class="stringliteral">&quot;/cmd_vel&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>to<sp/>the<sp/>topic<sp/>feedback<sp/>to<sp/>have<sp/>the<sp/>status<sp/>always<sp/>available<sp/>and<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>sub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/move_base/feedback&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="service_8cpp_1a60a61cb42ee062b6782bcc39a63aa3bf" kindref="member">takeStatus</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>to<sp/>the<sp/>topic<sp/>goal<sp/>to<sp/>have<sp/>the<sp/>current<sp/>status<sp/>always<sp/>available<sp/>and<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>subG<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/move_base/goal&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="service_8cpp_1a7b3a86d9513c00df95a3019351e00061" kindref="member">currGoal</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>to<sp/>the<sp/>topic<sp/>prov_cmd_vel<sp/>to<sp/>have<sp/>the<sp/>value<sp/>of<sp/>the<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>subV<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/my_cmd_vel&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="service_8cpp_1a2c38b7bf238ee6a4bd51cfe140c3d87f" kindref="member">takeVel</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>to<sp/>the<sp/>topic<sp/>scan<sp/>to<sp/>have<sp/>the<sp/>value<sp/>of<sp/>the<sp/>laser<sp/>to<sp/>avoid<sp/>obstacles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>subL<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/scan&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="service_8cpp_1ad92a1ab439081fef6e6c319e774e907f" kindref="member">driveAssist</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spin<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/service.cpp"/>
  </compounddef>
</doxygen>
